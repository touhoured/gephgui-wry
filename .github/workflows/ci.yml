name: CI
on:
  push:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:
    inputs:
      reset_hash:
        description: "Reset to hash"
        required: false
        type: string
env:
  CARGO_TERM_COLOR: always
  # CARGO_NET_GIT_FETCH_WITH_CLI: true
  # PKG_CONFIG_SYSROOT_DIR: /
permissions:
  contents: write

jobs:
  sync:
    name: Sync
    env:
      upstream: geph-official/gephgui-wry
    runs-on: ubuntu-latest
    if: inputs.skip_sync != true
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
      - name: Sync
        run: |
          git remote add upstream https://github.com/$upstream.git
          git fetch upstream
          git reset --hard $(git log --all --pretty=format:'%H' -n 1)
          git push -f
          git push --tags -f

  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    env:
      bin: gephgui-wry
      upstream: geph-official/gephgui-wry
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ env.upstream }}
          fetch-depth: 0
      - name: Reset latest tag
        run: git reset --hard $(git rev-list --all --max-count=1)
      - name: Reset to input ref
        if: inputs.reset_hash != null
        run: git reset --hard ${{ inputs.reset_hash }}
      - name: Check version
        run: |
          hash=$(git log --pretty=format:%h -n 1 --all)
          echo "hash=$hash" >> $GITHUB_ENV
      - name: install lib
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev
          version: 1.0
      - name: npm build
        working-directory: gephgui
        run: |
          pwd
          ls -lha
          npm install
          npm run build
      - name: Cache Rust
        uses: Swatinem/rust-cache@v1
      - name: Build
        run: |
          cargo build --target ${{ matrix.target }} --release
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.bin }}-${{ matrix.target }}-${{ env.hash }}
          path: target/${{ matrix.target }}/release/${{ env.bin }}
      - name: Compression
        working-directory: target/${{ matrix.target }}/release
        run: |
          7z a ${{ env.bin }}-${{ matrix.target }}-${{ env.hash }}.7z ${{ env.bin }}
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: archive-${{ env.hash }}
          files: target/${{ matrix.target }}/release/${{ env.bin }}-${{ matrix.target }}-${{ env.hash }}.7z