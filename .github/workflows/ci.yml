name: CI
on:
  push:
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:
    inputs:
      reset_hash:
        description: "Reset to hash"
        required: false
        type: string
      run_on_latest:
        description: "Run on Latest Commit"
        required: false
        type: boolean
env:
  upstream: geph-official/geph4-client
  bin: geph4-client

permissions:
  contents: write

jobs:
  common:
    name: common
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.getenv.outputs.date }}
      hash: ${{ steps.getenv.outputs.hash }}
      full_hash: ${{ steps.getenv.outputs.full_hash }}
      tag_name: ${{ steps.getenv.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0

      - name: Reset to Input HEAD
        if: inputs.reset_head != null
        run: git reset --hard ${{ inputs.reset_head }}

      - name: Get environment variable
        id: getenv
        shell: bash
        run: |
          echo "date=$(date -I)" >> "${GITHUB_OUTPUT}"
          echo "hash=$(git log --pretty=format:%h -n 1)" >> "${GITHUB_OUTPUT}"
          echo "full_hash=$(git log --pretty=format:%H -n 1)" >> "${GITHUB_OUTPUT}"
          echo "tag_name=$(git describe --tags)" >> "${GITHUB_OUTPUT}"

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: common
    if: inputs.skip_build_windows != true
    strategy:
      matrix:
        target:
          - i686-pc-windows-msvc
          - x86_64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          submodules: true

      - name: Reset to Input HEAD
        if: inputs.reset_head != null
        run: git reset --hard ${{ inputs.reset_head }}

      - name: npm build
        working-directory: gephgui
        run: |
          npm install
          npm run build

      - name: Build
        run: |
          cargo build --target ${{ matrix.target }} --release --locked

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.bin }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ env.bin }}.exe

  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
    env:
      bin: gephgui-wry
      upstream: geph-official/gephgui-wry
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          submodules: true

      - name: Reset to Input HEAD
        if: inputs.reset_head != null
        run: git reset --hard ${{ inputs.reset_head }}

      - name: Install library
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev
          version: 1.0
          
      - name: NPM build
        working-directory: gephgui
        run: |
          npm install
          npm run build
          
      - name: Build
        run: |
          cargo build --target ${{ matrix.target }} --release --locked
          
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.bin }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ env.bin }}

  upload-release:
    name: Upload file
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - common
      - build-windows
      - build-linux
    env:
      full_hash: ${{ needs.common.outputs.full_hash }}
      tag_name: ${{ needs.common.outputs.tag_name }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: Compresse and rename
        run: |
          mkdir release daily
          for file in ${{ env.bin }}*/*; do
              dirname=$(dirname "${file}")
              if [[ "${file}" == *"windows"* ]]; then
                  7z a "release/${dirname}.7z" "${file}"
                  cp "${file}" "daily/${dirname}.exe"
              else
                  tar -vcaf "release/${dirname}.tar.xz" "${file}"
                  cp ${file} daily/${dirname}
              fi
          done

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.tag_name }}
          tag_name: ${{ env.tag_name }}
          target_commitish: ${{ env.full_hash }}
          files: release/*

      - name: Update tag
        uses: jimeh/update-tags-action@v1
        with:
          tags: daily
          ref: ${{ env.full_hash }}

      - name: Daily
        uses: softprops/action-gh-release@v1
        with:
          name: Daily
          tag_name: daily
          files: daily/*

