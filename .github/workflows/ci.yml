name: CI
on:
  push:
  schedule:
    - cron: "0 6 * * 3"
  workflow_dispatch:
    inputs:
      reset_sha:
        description: "Reset to sha"
        required: false
        type: string
env:
  CARGO_TERM_COLOR: always
  # CARGO_NET_GIT_FETCH_WITH_CLI: true
  # PKG_CONFIG_SYSROOT_DIR: /
permissions:
  contents: write

jobs:
  build-linux:
    name: build-linux-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          # - x86_64-unknown-linux-musl
          # - aarch64-unknown-linux-musl
          # - aarch64-linux-android
        os:
          - ubuntu-latest
        bin:
          - gephgui-wry
        include:
          # - target: aarch64-unknown-linux-musl
          #   use-cross: true
          # - target: aarch64-linux-android
          #   use-cross: true
          - target: i686-pc-windows-msvc
            os: windows-latest
            bin: gephgui-wry.exe
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: geph-official/gephgui-wry
          fetch-depth: 0
          submodules: true
      - name: Reset latest tag
        run: git reset --hard $(git rev-list --all --max-count=1)
      - name: Reset to input ref
        if: inputs.reset_sha != null
        run: git reset --hard ${{ inputs.reset_sha }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install cross
        if: matrix.use-cross == true
        uses: taiki-e/install-action@cross
      # - name: Install musl-gcc
      #   if: |
      #     matrix.target == 'x86_64-unknown-linux-musl' ||
      #     matrix.target == 'aarch64-unknown-linux-musl'
      #   run: |
      #     sudo apt install musl-tools
      - name: install lib
        if: matrix.os == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: install libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev
          version: 1.0
      - name: npm build
        working-directory: gephgui
        run: |
          npm install
          npm run build
      - name: Cargo build
        if: matrix.use-cross != true
        run: cargo build --target ${{ matrix.target }} --release --locked
      - name: Cross build
        if: matrix.use-cross == true
        run: cross build --target ${{ matrix.target }} --release --locked
      - name: Move
        run: mv target/${{ matrix.target }}/release/${{ matrix.bin }} ./
      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.bin }}-${{ matrix.target }}
          path: ${{ matrix.bin }}
      - name: Package
        run: 7z a ${{ matrix.bin }}-${{ matrix.target }}.7z ${{ matrix.bin }}
      - name: Get date
        id: date
        shell: bash
        run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: archive-${{ steps.date.outputs.date }}
          files: ${{ matrix.bin }}-${{ matrix.target }}.7z
